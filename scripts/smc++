#!/usr/bin/env python2.7
'Perform various inference and data management tasks using SMC++'
from argparse import ArgumentParser
import sys
import os.path

import smcpp.commands as commands

# Simple wrapper class which ignores the widget option,
# enabling us to degrade gracefully in the non-GUI case.
class IgnorantArgumentParser(ArgumentParser):
    def add_argument(self, *args, **kwargs):
        kwargs.pop("widget", None)
        ArgumentParser.add_argument(self, *args, **kwargs)

def init_parser_class(parser_module, parser):
    parser_module.init_parser(parser)
    def main(args):
        parser_module.main(args)
    parser.set_defaults(func=main)

def main():
    parser = main.parser_cls()
    subparsers = parser.add_subparsers()
    # Initialize arguments. Each object is responsible for setting the
    # args.func, where the work takes place.
    cmds = [
            ('estimate', commands.estimate, 'Fit SMC++ to data'),
            ('plot', commands.plot, 'Plot estimated size history'),
            ('plot_posterior', commands.plot_posterior, 'Plot posterior decoding for a region'),
            ('convert', commands.convert, 'Convert VCF to SMC++ format')
            ]
    for kwd, module, help in cmds:
        p = subparsers.add_parser(kwd, help=help)
        init_parser_class(module, p)

    # Go.
    args = parser.parse_args()
    args.func(args)

if __name__ == "__main__":
    if os.path.basename(sys.argv[0]) == "smc++-gui":
        try:
            import wx
        except ImportError:
            sys.exit("wx module not found. Please install wxPython "
                     "(http://www.wxpython.org/download.php) in order to use the GUI.")
        try:
            from gooey import Gooey, GooeyParser
        except ImportError:
            sys.exit("gooey module not found. Please install gooey "
                     "($ pip install gooey) in order to use the GUI.")
        main = Gooey(main)
        main.parser_cls = GooeyParser
    else:
        main.parser_cls = IgnorantArgumentParser
    main()
