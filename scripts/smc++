#!/usr/bin/env python2.7
'Perform various inference and data management tasks using SMC++'
import argparse
import sys
import os.path
from gooey import Gooey, GooeyParser

import smcpp.commands as commands

def init_parser_class(parser_module, parser):
    parser_module.init_parser(parser)
    def main(args):
        parser_module.main(args)
    parser.set_defaults(func=main)

def main(parser):
    subparsers = parser.add_subparsers()
    # Initialize arguments. Each object is responsible for setting the
    # args.func, where the work takes place.
    estimate_p = subparsers.add_parser('estimate', help='Fit SMC++ to data')
    init_parser_class(commands.estimate, estimate_p)
    decode_p = subparsers.add_parser('decode', help='Perform posterior decoding')
    init_parser_class(commands.decode, decode_p)
    convert_p = subparsers.add_parser('convert', help='Convert VCF to SMC++ input format')
    init_parser_class(commands.convert, convert_p)
    plot_p = subparsers.add_parser('plot', help='Plot estimated size histories')
    init_parser_class(commands.plot, plot_p)

    # Go.
    args = parser.parse_args()
    args.func(args)

if __name__ == "__main__":
    if os.path.basename(sys.argv[0]) == "smc++-gui":
        Gooey(main)(GooeyParser())
    else:
        main(argparse.ArgumentParser())
